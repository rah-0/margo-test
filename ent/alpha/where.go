// Code generated by ent, DO NOT EDIT.

package alpha

import (
	"entgo.io/ent/dialect/sql"
	"github.com/rah-0/margo-test/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldID, id))
}

// UUID applies equality check predicate on the "Uuid" field. It's identical to UUIDEQ.
func UUID(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldUUID, v))
}

// FirstInsert applies equality check predicate on the "FirstInsert" field. It's identical to FirstInsertEQ.
func FirstInsert(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldFirstInsert, v))
}

// LastUpdate applies equality check predicate on the "LastUpdate" field. It's identical to LastUpdateEQ.
func LastUpdate(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldLastUpdate, v))
}

// Animal applies equality check predicate on the "Animal" field. It's identical to AnimalEQ.
func Animal(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldAnimal, v))
}

// BigNumber applies equality check predicate on the "BigNumber" field. It's identical to BigNumberEQ.
func BigNumber(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldBigNumber, v))
}

// TestField applies equality check predicate on the "TestField" field. It's identical to TestFieldEQ.
func TestField(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldTestField, v))
}

// UUIDEQ applies the EQ predicate on the "Uuid" field.
func UUIDEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "Uuid" field.
func UUIDNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "Uuid" field.
func UUIDIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "Uuid" field.
func UUIDNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "Uuid" field.
func UUIDGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "Uuid" field.
func UUIDGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "Uuid" field.
func UUIDLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "Uuid" field.
func UUIDLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldUUID, v))
}

// UUIDContains applies the Contains predicate on the "Uuid" field.
func UUIDContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldUUID, v))
}

// UUIDHasPrefix applies the HasPrefix predicate on the "Uuid" field.
func UUIDHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldUUID, v))
}

// UUIDHasSuffix applies the HasSuffix predicate on the "Uuid" field.
func UUIDHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldUUID, v))
}

// UUIDEqualFold applies the EqualFold predicate on the "Uuid" field.
func UUIDEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldUUID, v))
}

// UUIDContainsFold applies the ContainsFold predicate on the "Uuid" field.
func UUIDContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldUUID, v))
}

// FirstInsertEQ applies the EQ predicate on the "FirstInsert" field.
func FirstInsertEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldFirstInsert, v))
}

// FirstInsertNEQ applies the NEQ predicate on the "FirstInsert" field.
func FirstInsertNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldFirstInsert, v))
}

// FirstInsertIn applies the In predicate on the "FirstInsert" field.
func FirstInsertIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldFirstInsert, vs...))
}

// FirstInsertNotIn applies the NotIn predicate on the "FirstInsert" field.
func FirstInsertNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldFirstInsert, vs...))
}

// FirstInsertGT applies the GT predicate on the "FirstInsert" field.
func FirstInsertGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldFirstInsert, v))
}

// FirstInsertGTE applies the GTE predicate on the "FirstInsert" field.
func FirstInsertGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldFirstInsert, v))
}

// FirstInsertLT applies the LT predicate on the "FirstInsert" field.
func FirstInsertLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldFirstInsert, v))
}

// FirstInsertLTE applies the LTE predicate on the "FirstInsert" field.
func FirstInsertLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldFirstInsert, v))
}

// FirstInsertContains applies the Contains predicate on the "FirstInsert" field.
func FirstInsertContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldFirstInsert, v))
}

// FirstInsertHasPrefix applies the HasPrefix predicate on the "FirstInsert" field.
func FirstInsertHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldFirstInsert, v))
}

// FirstInsertHasSuffix applies the HasSuffix predicate on the "FirstInsert" field.
func FirstInsertHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldFirstInsert, v))
}

// FirstInsertEqualFold applies the EqualFold predicate on the "FirstInsert" field.
func FirstInsertEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldFirstInsert, v))
}

// FirstInsertContainsFold applies the ContainsFold predicate on the "FirstInsert" field.
func FirstInsertContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldFirstInsert, v))
}

// LastUpdateEQ applies the EQ predicate on the "LastUpdate" field.
func LastUpdateEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldLastUpdate, v))
}

// LastUpdateNEQ applies the NEQ predicate on the "LastUpdate" field.
func LastUpdateNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldLastUpdate, v))
}

// LastUpdateIn applies the In predicate on the "LastUpdate" field.
func LastUpdateIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldLastUpdate, vs...))
}

// LastUpdateNotIn applies the NotIn predicate on the "LastUpdate" field.
func LastUpdateNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldLastUpdate, vs...))
}

// LastUpdateGT applies the GT predicate on the "LastUpdate" field.
func LastUpdateGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldLastUpdate, v))
}

// LastUpdateGTE applies the GTE predicate on the "LastUpdate" field.
func LastUpdateGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldLastUpdate, v))
}

// LastUpdateLT applies the LT predicate on the "LastUpdate" field.
func LastUpdateLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldLastUpdate, v))
}

// LastUpdateLTE applies the LTE predicate on the "LastUpdate" field.
func LastUpdateLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldLastUpdate, v))
}

// LastUpdateContains applies the Contains predicate on the "LastUpdate" field.
func LastUpdateContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldLastUpdate, v))
}

// LastUpdateHasPrefix applies the HasPrefix predicate on the "LastUpdate" field.
func LastUpdateHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldLastUpdate, v))
}

// LastUpdateHasSuffix applies the HasSuffix predicate on the "LastUpdate" field.
func LastUpdateHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldLastUpdate, v))
}

// LastUpdateEqualFold applies the EqualFold predicate on the "LastUpdate" field.
func LastUpdateEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldLastUpdate, v))
}

// LastUpdateContainsFold applies the ContainsFold predicate on the "LastUpdate" field.
func LastUpdateContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldLastUpdate, v))
}

// AnimalEQ applies the EQ predicate on the "Animal" field.
func AnimalEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldAnimal, v))
}

// AnimalNEQ applies the NEQ predicate on the "Animal" field.
func AnimalNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldAnimal, v))
}

// AnimalIn applies the In predicate on the "Animal" field.
func AnimalIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldAnimal, vs...))
}

// AnimalNotIn applies the NotIn predicate on the "Animal" field.
func AnimalNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldAnimal, vs...))
}

// AnimalGT applies the GT predicate on the "Animal" field.
func AnimalGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldAnimal, v))
}

// AnimalGTE applies the GTE predicate on the "Animal" field.
func AnimalGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldAnimal, v))
}

// AnimalLT applies the LT predicate on the "Animal" field.
func AnimalLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldAnimal, v))
}

// AnimalLTE applies the LTE predicate on the "Animal" field.
func AnimalLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldAnimal, v))
}

// AnimalContains applies the Contains predicate on the "Animal" field.
func AnimalContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldAnimal, v))
}

// AnimalHasPrefix applies the HasPrefix predicate on the "Animal" field.
func AnimalHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldAnimal, v))
}

// AnimalHasSuffix applies the HasSuffix predicate on the "Animal" field.
func AnimalHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldAnimal, v))
}

// AnimalEqualFold applies the EqualFold predicate on the "Animal" field.
func AnimalEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldAnimal, v))
}

// AnimalContainsFold applies the ContainsFold predicate on the "Animal" field.
func AnimalContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldAnimal, v))
}

// BigNumberEQ applies the EQ predicate on the "BigNumber" field.
func BigNumberEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldBigNumber, v))
}

// BigNumberNEQ applies the NEQ predicate on the "BigNumber" field.
func BigNumberNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldBigNumber, v))
}

// BigNumberIn applies the In predicate on the "BigNumber" field.
func BigNumberIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldBigNumber, vs...))
}

// BigNumberNotIn applies the NotIn predicate on the "BigNumber" field.
func BigNumberNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldBigNumber, vs...))
}

// BigNumberGT applies the GT predicate on the "BigNumber" field.
func BigNumberGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldBigNumber, v))
}

// BigNumberGTE applies the GTE predicate on the "BigNumber" field.
func BigNumberGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldBigNumber, v))
}

// BigNumberLT applies the LT predicate on the "BigNumber" field.
func BigNumberLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldBigNumber, v))
}

// BigNumberLTE applies the LTE predicate on the "BigNumber" field.
func BigNumberLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldBigNumber, v))
}

// BigNumberContains applies the Contains predicate on the "BigNumber" field.
func BigNumberContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldBigNumber, v))
}

// BigNumberHasPrefix applies the HasPrefix predicate on the "BigNumber" field.
func BigNumberHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldBigNumber, v))
}

// BigNumberHasSuffix applies the HasSuffix predicate on the "BigNumber" field.
func BigNumberHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldBigNumber, v))
}

// BigNumberEqualFold applies the EqualFold predicate on the "BigNumber" field.
func BigNumberEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldBigNumber, v))
}

// BigNumberContainsFold applies the ContainsFold predicate on the "BigNumber" field.
func BigNumberContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldBigNumber, v))
}

// TestFieldEQ applies the EQ predicate on the "TestField" field.
func TestFieldEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEQ(FieldTestField, v))
}

// TestFieldNEQ applies the NEQ predicate on the "TestField" field.
func TestFieldNEQ(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNEQ(FieldTestField, v))
}

// TestFieldIn applies the In predicate on the "TestField" field.
func TestFieldIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldIn(FieldTestField, vs...))
}

// TestFieldNotIn applies the NotIn predicate on the "TestField" field.
func TestFieldNotIn(vs ...string) predicate.Alpha {
	return predicate.Alpha(sql.FieldNotIn(FieldTestField, vs...))
}

// TestFieldGT applies the GT predicate on the "TestField" field.
func TestFieldGT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGT(FieldTestField, v))
}

// TestFieldGTE applies the GTE predicate on the "TestField" field.
func TestFieldGTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldGTE(FieldTestField, v))
}

// TestFieldLT applies the LT predicate on the "TestField" field.
func TestFieldLT(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLT(FieldTestField, v))
}

// TestFieldLTE applies the LTE predicate on the "TestField" field.
func TestFieldLTE(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldLTE(FieldTestField, v))
}

// TestFieldContains applies the Contains predicate on the "TestField" field.
func TestFieldContains(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContains(FieldTestField, v))
}

// TestFieldHasPrefix applies the HasPrefix predicate on the "TestField" field.
func TestFieldHasPrefix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasPrefix(FieldTestField, v))
}

// TestFieldHasSuffix applies the HasSuffix predicate on the "TestField" field.
func TestFieldHasSuffix(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldHasSuffix(FieldTestField, v))
}

// TestFieldIsNil applies the IsNil predicate on the "TestField" field.
func TestFieldIsNil() predicate.Alpha {
	return predicate.Alpha(sql.FieldIsNull(FieldTestField))
}

// TestFieldNotNil applies the NotNil predicate on the "TestField" field.
func TestFieldNotNil() predicate.Alpha {
	return predicate.Alpha(sql.FieldNotNull(FieldTestField))
}

// TestFieldEqualFold applies the EqualFold predicate on the "TestField" field.
func TestFieldEqualFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldEqualFold(FieldTestField, v))
}

// TestFieldContainsFold applies the ContainsFold predicate on the "TestField" field.
func TestFieldContainsFold(v string) predicate.Alpha {
	return predicate.Alpha(sql.FieldContainsFold(FieldTestField, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Alpha) predicate.Alpha {
	return predicate.Alpha(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Alpha) predicate.Alpha {
	return predicate.Alpha(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Alpha) predicate.Alpha {
	return predicate.Alpha(sql.NotPredicates(p))
}
