// Code generated by ent, DO NOT EDIT.

package alpha

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the alpha type in the database.
	Label = "alpha"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "Uuid"
	// FieldFirstInsert holds the string denoting the firstinsert field in the database.
	FieldFirstInsert = "FirstInsert"
	// FieldLastUpdate holds the string denoting the lastupdate field in the database.
	FieldLastUpdate = "LastUpdate"
	// FieldAnimal holds the string denoting the animal field in the database.
	FieldAnimal = "Animal"
	// FieldBigNumber holds the string denoting the bignumber field in the database.
	FieldBigNumber = "BigNumber"
	// FieldTestField holds the string denoting the testfield field in the database.
	FieldTestField = "test_field"
	// Table holds the table name of the alpha in the database.
	Table = "alpha"
)

// Columns holds all SQL columns for alpha fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldFirstInsert,
	FieldLastUpdate,
	FieldAnimal,
	FieldBigNumber,
	FieldTestField,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UUIDValidator is a validator for the "Uuid" field. It is called by the builders before save.
	UUIDValidator func(string) error
	// AnimalValidator is a validator for the "Animal" field. It is called by the builders before save.
	AnimalValidator func(string) error
)

// OrderOption defines the ordering options for the Alpha queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUUID orders the results by the Uuid field.
func ByUUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUUID, opts...).ToFunc()
}

// ByFirstInsert orders the results by the FirstInsert field.
func ByFirstInsert(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFirstInsert, opts...).ToFunc()
}

// ByLastUpdate orders the results by the LastUpdate field.
func ByLastUpdate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastUpdate, opts...).ToFunc()
}

// ByAnimal orders the results by the Animal field.
func ByAnimal(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAnimal, opts...).ToFunc()
}

// ByBigNumber orders the results by the BigNumber field.
func ByBigNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBigNumber, opts...).ToFunc()
}

// ByTestField orders the results by the TestField field.
func ByTestField(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTestField, opts...).ToFunc()
}
